import { createFilter } from '@rollup/pluginutils';
import { minify } from 'html-minifier';
//import path from 'path';

const htmlMinifierOptions = {
  collapseWhitespace: true,
  collapseInlineTagWhitespace: true,
  includeAutoGeneratedTags: false,
  minifyCSS: true,
  removeComments: true
};

// function resolvePathToLib(id) {
//   const absolutePath = path.resolve(__dirname, 'src/lib');
//   const relativePath = path.relative(id, absolutePath);
//   return relativePath.slice(3).replace(/\\/g, '/');
// }

// import HTMLTemplate from '${resolvePathToLib(id)}/HTMLTemplate';

export default function htmlTemplateLoader() {
	const filter = createFilter('**/*.html');
	return {
		name: 'html-loader',
		transform(code, id) {
			if (filter(id)) {
				return {
          code: `
            import HTMLTemplate from '@lib//HTMLTemplate';
            const html = process.env.NODE_ENV === 'production'
              ? ${JSON.stringify(minify(code, htmlMinifierOptions))}
              : ${JSON.stringify(code)};
            const template = new HTMLTemplate(html);
            export default template;
          `
				};
			}
		}
	};
}